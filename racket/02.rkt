#lang racket

(require "recurse.rkt")

; Problem #2
; Each new term in the Fibonacci sequence is generated by adding the
; previous two terms. By starting with 1 and 2, the first 10 terms will be:

; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

; By considering the terms in the Fibonacci sequence whose values do not
; exceed four million, find the sum of the even-valued terms.

(define (sum l)
  (apply + l))

(define (fibonacci i)
  (recurse (aux in out index) (1 0 i)
    (if (< index 0)
      out
      (aux (+ in out) in (- index 1)))))

(define (generate-fibonacci-sequence n)
  (recurse (aux lim in out) (n 1 '())
    (let ((cur (fibonacci in)))
      (if (>= cur lim)
        out
        (aux lim (+ 1 in) (cons cur out))))))

; Solution
(sum (filter even? (generate-fibonacci-sequence 4000000)))
